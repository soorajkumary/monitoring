apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentdnew
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentdnew
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentdnew
roleRef:
  kind: ClusterRole
  name: fluentdnew
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentdnew
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api-cluster-role
  namespace: default
rules:
  - apiGroups:
        - ""
        - apps
        - autoscaling
        - batch
        - extensions
        - policy
        - rbac.authorization.k8s.io
    resources:
      - pods
      - componentstatuses
      - configmaps
      - daemonsets
      - deployments
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: api-cluster-role-binding
subjects:
- namespace: default
  kind: ServiceAccount
  name: fluentdnew 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api-cluster-role 
---
apiVersion: v1
kind: Secret
metadata:
  name: opensearch-credentials
#  namespace: logging
type: Opaque
data:
  username: YWRtaW4=
  password: YWRtaW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
#  namespace: logging
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/*istio*.log"]
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      keep_time_key true
      <parse>
        @type json
        time_key @timestamp
        time_format %Y-%m-%dT%H:%M:%S.%N%z
        keep_time_key true
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
      skip_container_metadata "true"
    </filter>

    #log message is split when using fluentd logging driver
     <filter kubernetes.**>
      @type parser
      @log_level info
      key_name log
      reserve_data true
      reserve_time true
      remove_key_name_field true
      emit_invalid_record_to_error false
      replace_invalid_sequence true 
      <parse>
        @type json
      </parse>
    </filter>


     <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        log_json ${record["log"]}
      </record>
      remove_keys $.kubernetes.labels.rollouts-pod-template-hash,$.kubernetes.pod_id,$.kubernetes.container_image
    </filter>

    <system>
      ssl_verify_mode off
    </system>
    <match **>
      @type opensearch
      hosts opensearch-cluster-master
      port 9200
      logstash_format true
      include_tag_key true
      tag_key @log_name
      flush_interval 10s
      scheme https
      user admin
      password admin
      ssl_verify false
      ssl_verify_none true
    </match>
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
#  namespace: logging
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccountName: fluentdnew
      containers:
      - name: fluentd
#        image: fluent/fluentd-kubernetes-daemonset:v1-debian-opensearch
        image: fluent/fluentd-kubernetes-daemonset:v1.15-debian-opensearch-1
        volumeMounts:
        - name: config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        # ...
      volumes:
      - name: config
        configMap:
          name: fluentd-config
